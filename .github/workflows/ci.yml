name: ci

on:
  pull_request:

jobs:
  get-go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.parsed-version.outputs.GO_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Parse Go version
        id: parsed-version
        run: |
          version=$(go list -f {{.GoVersion}} -m)
          echo ::set-output name=GO_VERSION::${version}
          echo "Go version is ${version}"

  format:
    runs-on: ubuntu-latest
    needs: get-go-version
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}

      - name: Check Go Format
        run: make fmtcheck

  build:
    runs-on: ubuntu-latest
    needs: get-go-version
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Module Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}

      - name: Build
        run: make dev
